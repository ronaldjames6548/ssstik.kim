.heading-wrapper {
  display: flex;
  align-items: baseline;
  gap: 6px;
}

@media (min-width: 50em) {
  .heading-wrapper {
    flex-direction: row-reverse;
    justify-content: flex-end;
    margin-inline-start: calc(-1 * 25px);
  }
  .heading-wrapper .anchor-link {
    visibility: hidden;
  }
  .heading-wrapper:hover .anchor-link {
    visibility: visible;
  }
}

/* Custom scrollbar */
::-webkit-scrollbar-track {
  border: none;
  background-color: white;
}

::-webkit-scrollbar {
  width: 10px;
  background-color: white;
}

::-webkit-scrollbar-thumb {
  background-color: #000000;
}
.dark {
  ::-webkit-scrollbar-track {
    border: none;
    background-color: rgb(12 10 9);
  }
  ::-webkit-scrollbar {
    width: 10px;
    background-color: rgb(12 10 9);
  }
  ::-webkit-scrollbar-thumb {
    background-color: white;
  }
}

.tab-menu {
  margin-top: 1rem;
  overflow: hidden;
  border-radius: 4px;
  width: 100%;
  background: rgba(255, 255, 255, 0.24);
  display: flex;
  justify-content: space-between;
}
.center {
  text-align: center;
}
.tab-menu button.active {
  background-color: transparent;
}
.tab-menu button {
  background-color: transparent;
  float: left;
  border: none;
  outline: 0;
  cursor: pointer;
  padding: 12px 16px;
  transition: 0.3s;
  font-size: 16px;
  color: #fff;
  font-weight: 500;
  border-right: 1px solid rgba(255, 255, 255, 0.2);
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
}
.active {
  background-color: #4caf50;
  color: #fff;
}
.tab-menu span {
  float: left;
  padding-left: 4px;
}

.pageTunerWrapper {
  align-items: center;
  display: flex;
  flex-direction: column;
  margin: 16px 0 -12px;
}
* {
  box-sizing: border-box;
  word-wrap: break-word !important;
}
user agent stylesheet div {
  display: block;
  unicode-bidi: isolate;
}
.pageTunerWrapper__items {
  background: hsla(0, 0%, 100%, 0.24);
  border-radius: 6px;
  display: flex;
}

.pageTunerWrapper__item {
  padding: 5px 10px;
}
.pageTunerWrapper__item a,
.pageTunerWrapper__item p {
  align-items: center;
  display: flex;
  gap: 6px;
  margin: 0 auto;
  padding: 6px 22px;
  text-decoration: none;
  transition: all 0.7s ease;
}

a {
  background-color: transparent;
}
a:-webkit-any-link {
  color: -webkit-link;
  cursor: pointer;
  text-decoration: underline;
}
a {
  text-decoration: none !important;
}
img {
  border-style: none;
}

user agent stylesheet img {
  overflow-clip-margin: content-box;
  overflow: clip;
}
user agent stylesheet a:-webkit-any-link {
  color: -webkit-link;
  cursor: pointer;
}
.pageTunerWrapper__item a span,
.pageTunerWrapper__item p span {
  color: #fff;
  font-size: 16px;
  font-weight: 400;
  line-height: 24px;
}
.pageTunerWrapper__item a,
.pageTunerWrapper__item p {
  align-items: center;
  display: flex;
  gap: 6px;
  margin: 0 auto;
  padding: 6px 22px;
  text-decoration: none;
  transition: all 0.7s ease;
}
.pageTunerWrapper__item:not(:first-child) {
  border-left: 1px solid hsla(0, 0%, 100%, 0.2);
}



.section-text__card {
    align-items: center;
    background: var(--color-white);
    border-radius: 12px;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, .1), 0 4px 6px -4px rgba(0, 0, 0, .1);
    display: grid;
    grid-template-columns: max-content 1fr;
}
.section-text {
    display: grid;
    grid-template-columns: 1fr;
    margin: 64px auto;
    max-width: 1024px;
    padding: 0 20px;
    text-align: center;
}
:root {
    --color-white: #fff;
    --color-black-primary: #000;
    --color-black-second: rgba(0, 0, 0, .7);
    --color-primary: #1d4ed8;
    --color-purple: #be185d;
}
.section-text picture {
    height: 100%;
}
.section-text img {
    border-radius: 12px 0 0 12px;
    display: block;
    height: 100%;
    max-width: 100%;
    -o-object-fit: cover;
    object-fit: cover;
}
img {
    border-style: none;
}
.section-text__content {
    padding: 0 32px;
    text-align: left;
}
.section-text__content h2 {
    color: var(--color-primary);
    font-size: 32px;
    font-weight: 700;
    line-height: 100%;
    margin: 0 auto 18px;
}
.section-text__content {
    padding: 0 32px;
    text-align: left;
}
.section-text__content p {
    color: var(--color-black-second);
    font-size: 18px;
    font-weight: 400;
    line-height: 28px;
    margin: 0 auto;
}
.section-instruction__title {
    border-bottom: 2px solid transparent;
    -o-border-image: linear-gradient(108deg, rgba(0, 158, 226, .9) -57.13%, #8b2fff 11.08%, rgba(245, 5, 79, .9) 102.57%);
    border-image: linear-gradient(108deg, rgba(0, 158, 226, .9) -57.13%, #8b2fff 11.08%, rgba(245, 5, 79, .9) 102.57%);
    border-image-slice: 1;
    color: var(--color-primary);
    font-size: 32px;
    font-weight: 700;
    line-height: 100%;
    margin: 0 auto;
    padding-bottom: 20px;
    text-align: center;
}









/*! tailwindcss v4.0.14 | MIT License | https://tailwindcss.com */
@layer theme {
    :root,:host {
        --font-sans: "DM Sans","sans-serif";
        --font-mono: "DM Mono","monospace";
        --color-blue-200: oklch(.882 .059 254.128);
        --color-blue-400: oklch(.707 .165 254.624);
        --color-blue-600: oklch(.546 .245 262.881);
        --color-blue-800: oklch(.424 .199 265.638);
        --color-gray-200: oklch(.928 .006 264.531);
        --color-white: #fff;
        --spacing: .25rem;
        --container-sm: 24rem;
        --container-md: 28rem;
        --container-lg: 32rem;
        --container-xl: 36rem;
        --container-2xl: 42rem;
        --container-3xl: 48rem;
        --container-4xl: 56rem;
        --container-5xl: 64rem;
        --container-7xl: 80rem;
        --text-xs: .75rem;
        --text-xs--line-height: calc(1/.75);
        --text-sm: .875rem;
        --text-sm--line-height: calc(1.25/.875);
        --text-base: 1rem;
        --text-base--line-height: 1.5 ;
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75/1.125);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75/1.25);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2/1.5);
        --text-3xl: 1.875rem;
        --text-3xl--line-height: 1.2 ;
        --text-4xl: 2.25rem;
        --text-4xl--line-height: calc(2.5/2.25);
        --text-5xl: 3rem;
        --text-5xl--line-height: 1;
        --text-6xl: 3.75rem;
        --text-6xl--line-height: 1;
        --text-7xl: 4.5rem;
        --text-7xl--line-height: 1;
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --tracking-tight: -.025em;
        --tracking-wide: .025em;
        --leading-tight: 1.25;
        --leading-snug: 1.375;
        --radius-xs: .125rem;
        --radius-sm: .25rem;
        --radius-md: .375rem;
        --radius-lg: .5rem;
        --radius-xl: .75rem;
        --radius-2xl: 1rem;
        --radius-3xl: 1.5rem;
        --ease-in-out: cubic-bezier(.4,0,.2,1);
        --blur-md: 12px;
        --aspect-video: 16/9;
        --default-transition-duration: .15s;
        --default-transition-timing-function: cubic-bezier(.4,0,.2,1);
        --default-font-family: var(--font-sans);
        --default-font-feature-settings: var(--font-sans--font-feature-settings);
        --default-font-variation-settings: var(--font-sans--font-variation-settings);
        --default-mono-font-family: var(--font-mono);
        --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
        --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
        --font-dm-sans: "DM Sans","sans-serif";
        --font-dm-mono: "DM Mono","monospace";
        --font-inter: "Inter","sans-serif";
        --color-cream: hsl(var(--cream));
        --color-background: hsl(var(--background));
        --color-foreground: hsl(var(--foreground));
        --color-card: hsl(var(--card));
        --color-card-foreground: hsl(var(--card-foreground));
        --color-popover: hsl(var(--popover));
        --color-popover-foreground: hsl(var(--popover-foreground));
        --color-primary: hsl(var(--primary));
        --color-primary-foreground: hsl(var(--primary-foreground));
        --color-secondary: hsl(var(--secondary));
        --color-secondary-foreground: hsl(var(--secondary-foreground));
        --color-muted: hsl(var(--muted));
        --color-muted-foreground: hsl(var(--muted-foreground));
        --color-accent: hsl(var(--accent));
        --color-accent-foreground: hsl(var(--accent-foreground));
        --color-destructive: hsl(var(--destructive));
        --color-destructive-foreground: hsl(var(--destructive-foreground));
        --color-border: hsl(var(--border));
        --color-input: hsl(var(--input));
        --color-ring: hsl(var(--ring))
    }
}

@layer base {
    *,:after,:before,::backdrop {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }

    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }

    html,: host {
        -webkit-text-size-adjust:100%;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(--default-font-family,ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings,normal);
        font-variation-settings: var(--default-font-variation-settings,normal);
        -webkit-tap-highlight-color: transparent
    }

    body {
        line-height: inherit
    }

    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px
    }

    abbr: where([title]) {
        -webkit-text-decoration:underline dotted;
        text-decoration: underline dotted
    }

    h1,h2,h3,h4,h5,h6 {
        font-size: inherit;
        font-weight: inherit
    }

    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit
    }

    b,strong {
        font-weight: bolder
    }

    code,kbd,samp,pre {
        font-family: var(--default-mono-font-family,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace);
        font-feature-settings: var(--default-mono-font-feature-settings,normal);
        font-variation-settings: var(--default-mono-font-variation-settings,normal);
        font-size: 1em
    }

    small {
        font-size: 80%
    }

    sub,sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative
    }

    sub {
        bottom: -.25em
    }

    sup {
        top: -.5em
    }

    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse
    }

    :-moz-focusring {
        outline: auto
    }

    progress {
        vertical-align: baseline
    }

    summary {
        display: list-item
    }

    ol,ul,menu {
        list-style: none
    }

    img,svg,video,canvas,audio,iframe,embed,object {
        vertical-align: middle;
        display: block
    }

    img,video {
        max-width: 100%;
        height: auto
    }

    button,input,select,optgroup,textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }

    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }

    :where(select: is([multiple],[size])) optgroup {
        font-weight:bolder
    }

    :where(select: is([multiple],[size])) optgroup option {
        padding-inline-start:20px
    }

    ::file-selector-button {
        margin-inline-end:4px}

    ::placeholder {
        opacity: 1;
        color: color-mix(in oklab,currentColor 50%,transparent)
    }

    textarea {
        resize: vertical
    }

    ::-webkit-search-decoration {
        -webkit-appearance: none
    }

    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit
    }

    ::-webkit-datetime-edit {
        display: inline-flex
    }

    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0
    }

    ::-webkit-datetime-edit {
        padding-block:0}

    ::-webkit-datetime-edit-year-field {
        padding-block:0}

    ::-webkit-datetime-edit-month-field {
        padding-block:0}

    ::-webkit-datetime-edit-day-field {
        padding-block:0}

    ::-webkit-datetime-edit-hour-field {
        padding-block:0}

    ::-webkit-datetime-edit-minute-field {
        padding-block:0}

    ::-webkit-datetime-edit-second-field {
        padding-block:0}

    ::-webkit-datetime-edit-millisecond-field {
        padding-block:0}

    ::-webkit-datetime-edit-meridiem-field {
        padding-block:0}

    :-moz-ui-invalid {
        box-shadow: none
    }

    button,input: where([type=button],[type=reset],[type=submit]) {
        appearance:button
    }

    ::file-selector-button {
        appearance: button
    }

    ::-webkit-inner-spin-button {
        height: auto
    }

    ::-webkit-outer-spin-button {
        height: auto
    }

    [hidden]: where(:not([hidden=until-found])) {
        display:none!important
    }

    *,:after,:before,::backdrop {
        border-color: var(--color-gray-200,currentColor)
    }

    ::file-selector-button {
        border-color: var(--color-gray-200,currentColor)
    }

    :root {
        --background: 0 0% 100%;
        --foreground: 240 10% 4%;
        --card: 0 0% 100%;
        --card-foreground: 240 10% 4%;
        --popover: 0 0% 100%;
        --popover-foreground: 240 10% 4%;
        --primary: 0 0% 0%;
        --primary-foreground: 0 0% 100%;
        --secondary: 0 0% 97%;
        --secondary-foreground: 0 0% 9%;
        --muted: 0 0% 97%;
        --muted-foreground: 0 0% 49%;
        --accent: 0 0% 97%;
        --accent-foreground: 0 0% 9%;
        --destructive: 0 84.2% 60.2%;
        --destructive-foreground: 0 0% 100%;
        --border: 0 0% 89.8%;
        --input: 0 0% 89.8%;
        --ring: 240 10% 4%;
        --cream: 43 52% 94%;
        --chart-1: 12 76% 61%;
        --chart-2: 173 58% 39%;
        --chart-3: 197 37% 24%;
        --chart-4: 43 74% 66%;
        --chart-5: 27 87% 67%
    }

    .dark {
        --background: 240 10% 4%;
        --foreground: 0 0% 100%;
        --card: 240 10% 4%;
        --card-foreground: 0 0% 100%;
        --popover: 240 10% 4%;
        --popover-foreground: 0 0% 100%;
        --primary: 0 0% 100%;
        --primary-foreground: 0 0% 0%;
        --secondary: 0 0% 9%;
        --secondary-foreground: 0 0% 97%;
        --muted: 0 0% 9%;
        --muted-foreground: 0 0% 70%;
        --accent: 0 0% 9%;
        --accent-foreground: 0 0% 97%;
        --destructive: 0 84.2% 60.2%;
        --destructive-foreground: 0 0% 100%;
        --border: 0 0% 20%;
        --input: 0 0% 20%;
        --ring: 0 0% 100%;
        --cream: 43 32% 15%
    }

    * {
        border-color: var(--color-border);
        outline-color: color-mix(in oklab,var(--color-ring)50%,transparent)
    }

    body {
        background-color: var(--color-background);
        color: var(--color-foreground)
    }
}

@layer components {
    button {
        cursor: pointer
    }

    [class*=border] {
        border-color: var(--color-border)
    }
}

@layer utilities {
    .pointer-events-none {
        pointer-events: none
    }

    .invisible {
        visibility: hidden
    }

    .visible {
        visibility: visible
    }

    .sr-only {
        clip: rect(0,0,0,0);
        white-space: nowrap;
        border-width: 0;
        width: 1px;
        height: 1px;
        margin: -1px;
        padding: 0;
        position: absolute;
        overflow: hidden
    }

    .absolute {
        position: absolute
    }

    .fixed {
        position: fixed
    }

    .relative {
        position: relative
    }

    .static {
        position: static
    }

    .inset-0 {
        inset: calc(var(--spacing)*0)
    }

    .inset-x-0 {
        inset-inline: calc(var(--spacing)*0)
    }

    .inset-y-0 {
        inset-block: calc(var(--spacing)*0)
    }

    .-top-12 {
        top: calc(var(--spacing)*-12)
    }

    .top-0 {
        top: calc(var(--spacing)*0)
    }

    .top-1\/2 {
        top: 50%
    }

    .top-5 {
        top: calc(var(--spacing)*5)
    }

    .top-\[60\%\] {
        top: 60%
    }

    .top-\[calc\(100\%\+1rem\)\] {
        top: calc(100% + 1rem)
    }

    .top-full {
        top: 100%
    }

    .top-px {
        top: 1px
    }

    .-right-12 {
        right: calc(var(--spacing)*-12)
    }

    .right-0 {
        right: calc(var(--spacing)*0)
    }

    .-bottom-12 {
        bottom: calc(var(--spacing)*-12)
    }

    .bottom-0 {
        bottom: calc(var(--spacing)*0)
    }

    .-left-12 {
        left: calc(var(--spacing)*-12)
    }

    .left-0 {
        left: calc(var(--spacing)*0)
    }

    .left-1\/2 {
        left: 50%
    }

    .z-1 {
        z-index: 1
    }

    .z-10 {
        z-index: 10
    }

    .z-50 {
        z-index: 50
    }

    .col-span-1 {
        grid-column: span 1/span 1
    }

    .container {
        width: 100%
    }

    @media (width>=40rem) {
        .container {
            max-width: 40rem
        }
    }

    @media (width>=48rem) {
        .container {
            max-width: 48rem
        }
    }

    @media (width>=64rem) {
        .container {
            max-width: 64rem
        }
    }

    @media (width>=80rem) {
        .container {
            max-width: 80rem
        }
    }

    @media (width>=96rem) {
        .container {
            max-width: 96rem
        }
    }

    .container {
        margin-inline:auto;padding-inline:1.5rem}

    @media (width>=40rem) {
        .container {
            max-width: none
        }
    }

    @media (width>=1400px) {
        .container {
            max-width: 1220px
        }
    }

    .mx-2\.5 {
        margin-inline: calc(var(--spacing)*2.5)
    }

    .mx-8 {
        margin-inline:calc(var(--spacing)*8)}

    .mx-auto {
        margin-inline: auto
    }

    .my-5 {
        margin-block:calc(var(--spacing)*5)}

    .my-12 {
        margin-block: calc(var(--spacing)*12)
    }

    .prose {
        color: var(--tw-prose-body);
        --tw-prose-body: oklch(.373 .034 259.733);
        --tw-prose-headings: oklch(.21 .034 264.665);
        --tw-prose-lead: oklch(.446 .03 256.802);
        --tw-prose-links: oklch(.21 .034 264.665);
        --tw-prose-bold: oklch(.21 .034 264.665);
        --tw-prose-counters: oklch(.551 .027 264.364);
        --tw-prose-bullets: oklch(.872 .01 258.338);
        --tw-prose-hr: oklch(.928 .006 264.531);
        --tw-prose-quotes: oklch(.21 .034 264.665);
        --tw-prose-quote-borders: oklch(.928 .006 264.531);
        --tw-prose-captions: oklch(.551 .027 264.364);
        --tw-prose-kbd: oklch(.21 .034 264.665);
        --tw-prose-kbd-shadows: NaN NaN NaN;
        --tw-prose-code: oklch(.21 .034 264.665);
        --tw-prose-pre-code: oklch(.928 .006 264.531);
        --tw-prose-pre-bg: oklch(.278 .033 256.848);
        --tw-prose-th-borders: oklch(.872 .01 258.338);
        --tw-prose-td-borders: oklch(.928 .006 264.531);
        --tw-prose-invert-body: oklch(.872 .01 258.338);
        --tw-prose-invert-headings: #fff;
        --tw-prose-invert-lead: oklch(.707 .022 261.325);
        --tw-prose-invert-links: #fff;
        --tw-prose-invert-bold: #fff;
        --tw-prose-invert-counters: oklch(.707 .022 261.325);
        --tw-prose-invert-bullets: oklch(.446 .03 256.802);
        --tw-prose-invert-hr: oklch(.373 .034 259.733);
        --tw-prose-invert-quotes: oklch(.967 .003 264.542);
        --tw-prose-invert-quote-borders: oklch(.373 .034 259.733);
        --tw-prose-invert-captions: oklch(.707 .022 261.325);
        --tw-prose-invert-kbd: #fff;
        --tw-prose-invert-kbd-shadows: 255 255 255;
        --tw-prose-invert-code: #fff;
        --tw-prose-invert-pre-code: oklch(.872 .01 258.338);
        --tw-prose-invert-pre-bg: #00000080;
        --tw-prose-invert-th-borders: oklch(.446 .03 256.802);
        --tw-prose-invert-td-borders: oklch(.373 .034 259.733);
        max-width: 65ch;
        font-size: 1rem;
        line-height: 1.75
    }

    .prose :where(p): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.25em;
        margin-bottom: 1.25em
    }

    .prose :where([class~=lead]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-lead);
        margin-top: 1.2em;
        margin-bottom: 1.2em;
        font-size: 1.25em;
        line-height: 1.6
    }

    .prose :where(a): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-links);
        font-weight: 500;
        text-decoration: underline
    }

    .prose :where(strong): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-bold);
        font-weight: 600
    }

    .prose :where(a strong): not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(blockquote strong):not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(thead th strong):not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit
    }

    .prose :where(ol): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.25em;
        margin-bottom: 1.25em;
        padding-inline-start:1.625em;list-style-type: decimal
    }

    .prose :where(ol[type=A]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:upper-alpha
    }

    .prose :where(ol[type=a]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:lower-alpha
    }

    .prose :where(ol[type=A s]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:upper-alpha
    }

    .prose :where(ol[type=a s]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:lower-alpha
    }

    .prose :where(ol[type=I]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:upper-roman
    }

    .prose :where(ol[type=i]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:lower-roman
    }

    .prose :where(ol[type=I s]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:upper-roman
    }

    .prose :where(ol[type=i s]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:lower-roman
    }

    .prose :where(ol[type="1"]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        list-style-type:decimal
    }

    .prose :where(ul): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.25em;
        margin-bottom: 1.25em;
        padding-inline-start:1.625em;list-style-type: disc
    }

    .prose :where(ol>li): not(:where([class~=not-prose],[class~=not-prose] *))::marker {
        color:var(--tw-prose-counters);
        font-weight: 400
    }

    .prose :where(ul>li): not(:where([class~=not-prose],[class~=not-prose] *))::marker {
        color:var(--tw-prose-bullets)
    }

    .prose :where(dt): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-headings);
        margin-top: 1.25em;
        font-weight: 600
    }

    .prose :where(hr): not(:where([class~=not-prose],[class~=not-prose] *)) {
        border-color:var(--tw-prose-hr);
        border-top-width: 1px;
        margin-top: 3em;
        margin-bottom: 3em
    }

    .prose :where(blockquote): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-quotes);
        border-inline-start-width:.25rem;border-inline-start-color:var(--tw-prose-quote-borders);quotes: "“""”""‘""’";
        margin-top: 1.6em;
        margin-bottom: 1.6em;
        padding-inline-start:1em;font-style: italic;
        font-weight: 500
    }

    .prose :where(blockquote p: first-of-type):not(:where([class~=not-prose],[class~=not-prose] *)):before {
        content:open-quote
    }

    .prose :where(blockquote p: last-of-type):not(:where([class~=not-prose],[class~=not-prose] *)):after {
        content:close-quote
    }

    .prose :where(h1): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-headings);
        margin-top: 0;
        margin-bottom: .888889em;
        font-size: 2.25em;
        font-weight: 800;
        line-height: 1.11111
    }

    .prose :where(h1 strong): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit;
        font-weight: 900
    }

    .prose :where(h2): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-headings);
        margin-top: 2em;
        margin-bottom: 1em;
        font-size: 1.5em;
        font-weight: 700;
        line-height: 1.33333
    }

    .prose :where(h2 strong): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit;
        font-weight: 800
    }

    .prose :where(h3): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-headings);
        margin-top: 1.6em;
        margin-bottom: .6em;
        font-size: 1.25em;
        font-weight: 600;
        line-height: 1.6
    }

    .prose :where(h3 strong): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit;
        font-weight: 700
    }

    .prose :where(h4): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-headings);
        margin-top: 1.5em;
        margin-bottom: .5em;
        font-weight: 600;
        line-height: 1.5
    }

    .prose :where(h4 strong): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit;
        font-weight: 700
    }

    .prose :where(img): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:2em;
        margin-bottom: 2em
    }

    .prose :where(picture): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:2em;
        margin-bottom: 2em;
        display: block
    }

    .prose :where(video): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:2em;
        margin-bottom: 2em
    }

    .prose :where(kbd): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-kbd);
        box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows)/10%),0 3px rgb(var(--tw-prose-kbd-shadows)/10%);
        padding-top: .1875em;
        padding-inline-end:.375em;padding-bottom: .1875em;
        border-radius: .3125rem;
        padding-inline-start:.375em;font-family: inherit;
        font-size: .875em;
        font-weight: 500
    }

    .prose :where(code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-code);
        font-size: .875em;
        font-weight: 600
    }

    .prose :where(code): not(:where([class~=not-prose],[class~=not-prose] *)):before,.prose :where(code):not(:where([class~=not-prose],[class~=not-prose] *)):after {
        content:"`"
    }

    .prose :where(a code): not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(h1 code):not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit
    }

    .prose :where(h2 code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit;
        font-size: .875em
    }

    .prose :where(h3 code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit;
        font-size: .9em
    }

    .prose :where(h4 code): not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(blockquote code):not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(thead th code):not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:inherit
    }

    .prose :where(pre): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-pre-code);
        background-color: var(--tw-prose-pre-bg);
        padding-top: .857143em;
        padding-inline-end:1.14286em;padding-bottom: .857143em;
        border-radius: .375rem;
        margin-top: 1.71429em;
        margin-bottom: 1.71429em;
        padding-inline-start:1.14286em;font-size: .875em;
        font-weight: 400;
        line-height: 1.71429;
        overflow-x: auto
    }

    .prose :where(pre code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        font-weight:inherit;
        color: inherit;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
        background-color: #0000;
        border-width: 0;
        border-radius: 0;
        padding: 0
    }

    .prose :where(pre code): not(:where([class~=not-prose],[class~=not-prose] *)):before,.prose :where(pre code):not(:where([class~=not-prose],[class~=not-prose] *)):after {
        content:none
    }

    .prose :where(table): not(:where([class~=not-prose],[class~=not-prose] *)) {
        table-layout:auto;
        width: 100%;
        margin-top: 2em;
        margin-bottom: 2em;
        font-size: .875em;
        line-height: 1.71429
    }

    .prose :where(thead): not(:where([class~=not-prose],[class~=not-prose] *)) {
        border-bottom-width:1px;
        border-bottom-color: var(--tw-prose-th-borders)
    }

    .prose :where(thead th): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-headings);
        vertical-align: bottom;
        padding-inline-end:.571429em;padding-bottom: .571429em;
        padding-inline-start:.571429em;font-weight: 600
    }

    .prose :where(tbody tr): not(:where([class~=not-prose],[class~=not-prose] *)) {
        border-bottom-width:1px;
        border-bottom-color: var(--tw-prose-td-borders)
    }

    .prose :where(tbody tr: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        border-bottom-width:0
    }

    .prose :where(tbody td): not(:where([class~=not-prose],[class~=not-prose] *)) {
        vertical-align:baseline
    }

    .prose :where(tfoot): not(:where([class~=not-prose],[class~=not-prose] *)) {
        border-top-width:1px;
        border-top-color: var(--tw-prose-th-borders)
    }

    .prose :where(tfoot td): not(:where([class~=not-prose],[class~=not-prose] *)) {
        vertical-align:top
    }

    .prose :where(th,td): not(:where([class~=not-prose],[class~=not-prose] *)) {
        text-align:start
    }

    .prose :where(figure>*): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0;
        margin-bottom: 0
    }

    .prose :where(figcaption): not(:where([class~=not-prose],[class~=not-prose] *)) {
        color:var(--tw-prose-captions);
        margin-top: .857143em;
        font-size: .875em;
        line-height: 1.42857
    }

    .prose :where(picture>img): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0;
        margin-bottom: 0
    }

    .prose :where(li): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.5em;
        margin-bottom: .5em
    }

    .prose :where(ol>li): not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(ul>li):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-start:.375em
    }

    .prose :where(.prose>ul>li p): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.75em;
        margin-bottom: .75em
    }

    .prose :where(.prose>ul>li>p: first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.25em
    }

    .prose :where(.prose>ul>li>p: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-bottom:1.25em
    }

    .prose :where(.prose>ol>li>p: first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.25em
    }

    .prose :where(.prose>ol>li>p: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-bottom:1.25em
    }

    .prose :where(ul ul,ul ol,ol ul,ol ol): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.75em;
        margin-bottom: .75em
    }

    .prose :where(dl): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.25em;
        margin-bottom: 1.25em
    }

    .prose :where(dd): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.5em;
        padding-inline-start:1.625em}

    .prose :where(hr+*): not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(h2+*):not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(h3+*):not(:where([class~=not-prose],[class~=not-prose] *)),.prose :where(h4+*):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0
    }

    .prose :where(thead th: first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-start:0
    }

    .prose :where(thead th: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-end:0
    }

    .prose :where(tbody td,tfoot td): not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-top:.571429em;
        padding-inline-end:.571429em;padding-bottom: .571429em;
        padding-inline-start:.571429em}

    .prose :where(tbody td: first-child,tfoot td:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-start:0
    }

    .prose :where(tbody td: last-child,tfoot td:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-end:0
    }

    .prose :where(figure): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:2em;
        margin-bottom: 2em
    }

    .prose :where(.prose>:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top: 0
    }

    .prose :where(.prose>:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-bottom: 0
    }

    .prose-lg {
        font-size: 1.125rem;
        line-height: 1.77778
    }

    .prose-lg :where(p): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.33333em;
        margin-bottom: 1.33333em
    }

    .prose-lg :where([class~=lead]): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.09091em;
        margin-bottom: 1.09091em;
        font-size: 1.22222em;
        line-height: 1.45455
    }

    .prose-lg :where(blockquote): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.66667em;
        margin-bottom: 1.66667em;
        padding-inline-start:1em}

    .prose-lg :where(h1): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0;
        margin-bottom: .833333em;
        font-size: 2.66667em;
        line-height: 1
    }

    .prose-lg :where(h2): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.86667em;
        margin-bottom: 1.06667em;
        font-size: 1.66667em;
        line-height: 1.33333
    }

    .prose-lg :where(h3): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.66667em;
        margin-bottom: .666667em;
        font-size: 1.33333em;
        line-height: 1.5
    }

    .prose-lg :where(h4): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.77778em;
        margin-bottom: .444444em;
        line-height: 1.55556
    }

    .prose-lg :where(img): not(:where([class~=not-prose],[class~=not-prose] *)),.prose-lg :where(picture):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.77778em;
        margin-bottom: 1.77778em
    }

    .prose-lg :where(picture>img): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0;
        margin-bottom: 0
    }

    .prose-lg :where(video): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.77778em;
        margin-bottom: 1.77778em
    }

    .prose-lg :where(kbd): not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-top:.222222em;
        padding-inline-end:.444444em;padding-bottom: .222222em;
        border-radius: .3125rem;
        padding-inline-start:.444444em;font-size: .888889em
    }

    .prose-lg :where(code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        font-size:.888889em
    }

    .prose-lg :where(h2 code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        font-size:.866667em
    }

    .prose-lg :where(h3 code): not(:where([class~=not-prose],[class~=not-prose] *)) {
        font-size:.875em
    }

    .prose-lg :where(pre): not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-top:1em;
        padding-inline-end:1.5em;padding-bottom: 1em;
        border-radius: .375rem;
        margin-top: 2em;
        margin-bottom: 2em;
        padding-inline-start:1.5em;font-size: .888889em;
        line-height: 1.75
    }

    .prose-lg :where(ol): not(:where([class~=not-prose],[class~=not-prose] *)),.prose-lg :where(ul):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.33333em;
        margin-bottom: 1.33333em;
        padding-inline-start:1.55556em}

    .prose-lg :where(li): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.666667em;
        margin-bottom: .666667em
    }

    .prose-lg :where(ol>li): not(:where([class~=not-prose],[class~=not-prose] *)),.prose-lg :where(ul>li):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-start:.444444em
    }

    .prose-lg :where(.prose-lg>ul>li p): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.888889em;
        margin-bottom: .888889em
    }

    .prose-lg :where(.prose-lg>ul>li>p: first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.33333em
    }

    .prose-lg :where(.prose-lg>ul>li>p: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-bottom:1.33333em
    }

    .prose-lg :where(.prose-lg>ol>li>p: first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.33333em
    }

    .prose-lg :where(.prose-lg>ol>li>p: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-bottom:1.33333em
    }

    .prose-lg :where(ul ul,ul ol,ol ul,ol ol): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.888889em;
        margin-bottom: .888889em
    }

    .prose-lg :where(dl): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.33333em;
        margin-bottom: 1.33333em
    }

    .prose-lg :where(dt): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.33333em
    }

    .prose-lg :where(dd): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:.666667em;
        padding-inline-start:1.55556em}

    .prose-lg :where(hr): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:3.11111em;
        margin-bottom: 3.11111em
    }

    .prose-lg :where(hr+*): not(:where([class~=not-prose],[class~=not-prose] *)),.prose-lg :where(h2+*):not(:where([class~=not-prose],[class~=not-prose] *)),.prose-lg :where(h3+*):not(:where([class~=not-prose],[class~=not-prose] *)),.prose-lg :where(h4+*):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0
    }

    .prose-lg :where(table): not(:where([class~=not-prose],[class~=not-prose] *)) {
        font-size:.888889em;
        line-height: 1.5
    }

    .prose-lg :where(thead th): not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-end:.75em;
        padding-bottom: .75em;
        padding-inline-start:.75em}

    .prose-lg :where(thead th: first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-start:0
    }

    .prose-lg :where(thead th: last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-end:0
    }

    .prose-lg :where(tbody td,tfoot td): not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-top:.75em;
        padding-inline-end:.75em;padding-bottom: .75em;
        padding-inline-start:.75em}

    .prose-lg :where(tbody td: first-child,tfoot td:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-start:0
    }

    .prose-lg :where(tbody td: last-child,tfoot td:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        padding-inline-end:0
    }

    .prose-lg :where(figure): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1.77778em;
        margin-bottom: 1.77778em
    }

    .prose-lg :where(figure>*): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:0;
        margin-bottom: 0
    }

    .prose-lg :where(figcaption): not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top:1em;
        font-size: .888889em;
        line-height: 1.5
    }

    .prose-lg :where(.prose-lg>:first-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-top: 0
    }

    .prose-lg :where(.prose-lg>:last-child):not(:where([class~=not-prose],[class~=not-prose] *)) {
        margin-bottom: 0
    }

    .-mt-4 {
        margin-top: calc(var(--spacing)*-4)
    }

    .mt-0 {
        margin-top: calc(var(--spacing)*0)
    }

    .mt-1 {
        margin-top: calc(var(--spacing)*1)
    }

    .mt-1\.5 {
        margin-top: calc(var(--spacing)*1.5)
    }

    .mt-2 {
        margin-top: calc(var(--spacing)*2)
    }

    .mt-2\.5 {
        margin-top: calc(var(--spacing)*2.5)
    }

    .mt-3 {
        margin-top: calc(var(--spacing)*3)
    }

    .mt-4 {
        margin-top: calc(var(--spacing)*4)
    }

    .mt-5 {
        margin-top: calc(var(--spacing)*5)
    }

    .mt-8 {
        margin-top: calc(var(--spacing)*8)
    }

    .mt-10 {
        margin-top: calc(var(--spacing)*10)
    }

    .mt-12 {
        margin-top: calc(var(--spacing)*12)
    }

    .mt-20 {
        margin-top: calc(var(--spacing)*20)
    }

    .mr-2 {
        margin-right: calc(var(--spacing)*2)
    }

    .mb-1 {
        margin-bottom: calc(var(--spacing)*1)
    }

    .mb-2 {
        margin-bottom: calc(var(--spacing)*2)
    }

    .mb-3 {
        margin-bottom: calc(var(--spacing)*3)
    }

    .mb-4 {
        margin-bottom: calc(var(--spacing)*4)
    }

    .mb-6 {
        margin-bottom: calc(var(--spacing)*6)
    }

    .mb-7 {
        margin-bottom: calc(var(--spacing)*7)
    }

    .mb-8 {
        margin-bottom: calc(var(--spacing)*8)
    }

    .mb-10 {
        margin-bottom: calc(var(--spacing)*10)
    }

    .-ml-4 {
        margin-left: calc(var(--spacing)*-4)
    }

    .ml-1 {
        margin-left: calc(var(--spacing)*1)
    }

    .line-clamp-2 {
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        display: -webkit-box;
        overflow: hidden
    }

    .block {
        display: block
    }

    .flex {
        display: flex
    }

    .grid {
        display: grid
    }

    .hidden {
        display: none
    }

    .inline {
        display: inline
    }

    .inline-block {
        display: inline-block
    }

    .inline-flex {
        display: inline-flex
    }

    .aspect-\[1\.28\/1\] {
        aspect-ratio: 1.28
    }

    .aspect-\[2\/1\.5\] {
        aspect-ratio: 2/1.5
    }

    .aspect-square {
        aspect-ratio: 1
    }

    .aspect-video {
        aspect-ratio: var(--aspect-video)
    }

    .size-2 {
        width: calc(var(--spacing)*2);
        height: calc(var(--spacing)*2)
    }

    .size-3 {
        width: calc(var(--spacing)*3);
        height: calc(var(--spacing)*3)
    }

    .size-4 {
        width: calc(var(--spacing)*4);
        height: calc(var(--spacing)*4)
    }

    .size-5 {
        width: calc(var(--spacing)*5);
        height: calc(var(--spacing)*5)
    }

    .size-6 {
        width: calc(var(--spacing)*6);
        height: calc(var(--spacing)*6)
    }

    .size-7 {
        width: calc(var(--spacing)*7);
        height: calc(var(--spacing)*7)
    }

    .size-8 {
        width: calc(var(--spacing)*8);
        height: calc(var(--spacing)*8)
    }

    .size-9 {
        width: calc(var(--spacing)*9);
        height: calc(var(--spacing)*9)
    }

    .size-14\.5 {
        width: calc(var(--spacing)*14.5);
        height: calc(var(--spacing)*14.5)
    }

    .size-16 {
        width: calc(var(--spacing)*16);
        height: calc(var(--spacing)*16)
    }

    .size-full {
        width: 100%;
        height: 100%
    }

    .h-0\.5 {
        height: calc(var(--spacing)*.5)
    }

    .h-1\.5 {
        height: calc(var(--spacing)*1.5)
    }

    .h-4 {
        height: calc(var(--spacing)*4)
    }

    .h-5 {
        height: calc(var(--spacing)*5)
    }

    .h-8 {
        height: calc(var(--spacing)*8)
    }

    .h-9 {
        height: calc(var(--spacing)*9)
    }

    .h-10 {
        height: calc(var(--spacing)*10)
    }

    .h-\[288px\] {
        height: 288px
    }

    .h-\[793px\] {
        height: 793px
    }

    .h-\[var\(--radix-navigation-menu-viewport-height\)\] {
        height: var(--radix-navigation-menu-viewport-height)
    }

    .h-auto {
        height: auto
    }

    .h-fit {
        height: fit-content
    }

    .h-full {
        height: 100%
    }

    .h-px {
        height: 1px
    }

    .h-screen {
        height: 100vh
    }

    .max-h-0 {
        max-height: calc(var(--spacing)*0)
    }

    .max-h-\[1000px\] {
        max-height: 1000px
    }

    .min-h-\[60px\] {
        min-height: 60px
    }

    .min-h-\[70vh\] {
        min-height: 70vh
    }

    .min-h-\[120px\] {
        min-height: 120px
    }

    .w-4 {
        width: calc(var(--spacing)*4)
    }

    .w-8 {
        width: calc(var(--spacing)*8)
    }

    .w-9 {
        width: calc(var(--spacing)*9)
    }

    .w-14 {
        width: calc(var(--spacing)*14)
    }

    .w-16 {
        width: calc(var(--spacing)*16)
    }

    .w-\[18px\] {
        width: 18px
    }

    .w-\[400px\] {
        width: 400px
    }

    .w-\[min\(90\%\,700px\)\] {
        width: min(90%,700px)
    }

    .w-fit {
        width: fit-content
    }

    .w-full {
        width: 100%
    }

    .w-max {
        width: max-content
    }

    .w-px {
        width: 1px
    }

    .max-w-2xl {
        max-width: var(--container-2xl)
    }

    .max-w-3xl {
        max-width: var(--container-3xl)
    }

    .max-w-4xl {
        max-width: var(--container-4xl)
    }

    .max-w-5xl {
        max-width: var(--container-5xl)
    }

    .max-w-7xl {
        max-width: var(--container-7xl)
    }

    .max-w-56 {
        max-width: calc(var(--spacing)*56)
    }

    .max-w-60 {
        max-width: calc(var(--spacing)*60)
    }

    .max-w-76 {
        max-width: calc(var(--spacing)*76)
    }

    .max-w-\[80\%\] {
        max-width: 80%
    }

    .max-w-lg {
        max-width: var(--container-lg)
    }

    .max-w-max {
        max-width: max-content
    }

    .max-w-md {
        max-width: var(--container-md)
    }

    .max-w-sm {
        max-width: var(--container-sm)
    }

    .max-w-xl {
        max-width: var(--container-xl)
    }

    .min-w-0 {
        min-width: calc(var(--spacing)*0)
    }

    .min-w-\[200px\] {
        min-width: 200px
    }

    .flex-1 {
        flex: 1
    }

    .flex-\[1\.5\] {
        flex: 1.5
    }

    .shrink-0 {
        flex-shrink: 0
    }

    .grow {
        flex-grow: 1
    }

    .grow-0 {
        flex-grow: 0
    }

    .basis-4\/5 {
        flex-basis: 80%
    }

    .basis-full {
        flex-basis: 100%
    }

    .origin-top {
        transform-origin: top
    }

    .-translate-x-1\/2 {
        --tw-translate-x: -50% ;
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .-translate-x-4 {
        --tw-translate-x: calc(var(--spacing)*-4);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .translate-x-0 {
        --tw-translate-x: calc(var(--spacing)*0);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .translate-x-4 {
        --tw-translate-x: calc(var(--spacing)*4);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .-translate-y-1\.5 {
        --tw-translate-y: calc(var(--spacing)*-1.5);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .-translate-y-1\/2 {
        --tw-translate-y: -50% ;
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .-translate-y-4 {
        --tw-translate-y: calc(var(--spacing)*-4);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .translate-y-0 {
        --tw-translate-y: calc(var(--spacing)*0);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .translate-y-1\.5 {
        --tw-translate-y: calc(var(--spacing)*1.5);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .scale-0 {
        --tw-scale-x: 0%;
        --tw-scale-y: 0%;
        --tw-scale-z: 0%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }

    .scale-100 {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }

    .scale-x-105 {
        --tw-scale-x: 105%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }

    .scale-x-110 {
        --tw-scale-x: 110%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }

    .scale-x-115 {
        --tw-scale-x: 115%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }

    .-rotate-45 {
        rotate: -45deg
    }

    .rotate-0 {
        rotate: none
    }

    .rotate-45 {
        rotate: 45deg
    }

    .rotate-90 {
        rotate: 90deg
    }

    .rotate-180 {
        rotate: 180deg
    }

    .transform {
        transform: var(--tw-rotate-x)var(--tw-rotate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y)
    }

    .cursor-pointer {
        cursor: pointer
    }

    .resize-none {
        resize: none
    }

    .list-none {
        list-style-type: none
    }

    .grid-cols-1 {
        grid-template-columns: repeat(1,minmax(0,1fr))
    }

    .grid-cols-2 {
        grid-template-columns: repeat(2,minmax(0,1fr))
    }

    .grid-cols-4 {
        grid-template-columns: repeat(4,minmax(0,1fr))
    }

    .grid-cols-5 {
        grid-template-columns: repeat(5,minmax(0,1fr))
    }

    .flex-col {
        flex-direction: column
    }

    .flex-col-reverse {
        flex-direction: column-reverse
    }

    .flex-wrap {
        flex-wrap: wrap
    }

    .place-items-center {
        place-items: center
    }

    .items-center {
        align-items: center
    }

    .items-end {
        align-items: flex-end
    }

    .items-start {
        align-items: flex-start
    }

    .justify-between {
        justify-content: space-between
    }

    .justify-center {
        justify-content: center
    }

    .justify-end {
        justify-content: flex-end
    }

    .justify-normal {
        justify-content: normal
    }

    .justify-items-center {
        justify-items: center
    }

    .gap-0\.5 {
        gap: calc(var(--spacing)*.5)
    }

    .gap-1 {
        gap: calc(var(--spacing)*1)
    }

    .gap-1\.5 {
        gap: calc(var(--spacing)*1.5)
    }

    .gap-2 {
        gap: calc(var(--spacing)*2)
    }

    .gap-2\.5 {
        gap: calc(var(--spacing)*2.5)
    }

    .gap-3 {
        gap: calc(var(--spacing)*3)
    }

    .gap-4 {
        gap: calc(var(--spacing)*4)
    }

    .gap-5 {
        gap: calc(var(--spacing)*5)
    }

    .gap-6 {
        gap: calc(var(--spacing)*6)
    }

    .gap-7 {
        gap: calc(var(--spacing)*7)
    }

    .gap-8 {
        gap: calc(var(--spacing)*8)
    }

    .gap-10 {
        gap: calc(var(--spacing)*10)
    }

    .gap-12 {
        gap: calc(var(--spacing)*12)
    }

    .gap-14 {
        gap: calc(var(--spacing)*14)
    }

    .gap-16 {
        gap: calc(var(--spacing)*16)
    }

    :where(.space-y-0>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start:calc(calc(var(--spacing)*0)*var(--tw-space-y-reverse));margin-block-end: calc(calc(var(--spacing)*0)*calc(1 - var(--tw-space-y-reverse)))
    }

    :where(.space-y-0\.5>: not(:last-child)) {
        --tw-space-y-reverse:0;
        margin-block-start:calc(calc(var(--spacing)*.5)*var(--tw-space-y-reverse));margin-block-end: calc(calc(var(--spacing)*.5)*calc(1 - var(--tw-space-y-reverse)))
    }

    :where(.space-y-1>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start:calc(calc(var(--spacing)*1)*var(--tw-space-y-reverse));margin-block-end: calc(calc(var(--spacing)*1)*calc(1 - var(--tw-space-y-reverse)))
    }

    :where(.space-y-1\.5>: not(:last-child)) {
        --tw-space-y-reverse:0;
        margin-block-start:calc(calc(var(--spacing)*1.5)*var(--tw-space-y-reverse));margin-block-end: calc(calc(var(--spacing)*1.5)*calc(1 - var(--tw-space-y-reverse)))
    }

    :where(.space-y-2>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start:calc(calc(var(--spacing)*2)*var(--tw-space-y-reverse));margin-block-end: calc(calc(var(--spacing)*2)*calc(1 - var(--tw-space-y-reverse)))
    }

    :where(.space-y-3>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start:calc(calc(var(--spacing)*3)*var(--tw-space-y-reverse));margin-block-end: calc(calc(var(--spacing)*3)*calc(1 - var(--tw-space-y-reverse)))
    }

    :where(.space-y-4>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start:calc(calc(var(--spacing)*4)*var(--tw-space-y-reverse));margin-block-end: calc(calc(var(--spacing)*4)*calc(1 - var(--tw-space-y-reverse)))
    }

    :where(.space-y-5>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start:calc(calc(var(--spacing)*5)*var(--tw-space-y-reverse));margin-block-end: calc(calc(var(--spacing)*5)*calc(1 - var(--tw-space-y-reverse)))
    }

    :where(.space-y-6>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start:calc(calc(var(--spacing)*6)*var(--tw-space-y-reverse));margin-block-end: calc(calc(var(--spacing)*6)*calc(1 - var(--tw-space-y-reverse)))
    }

    :where(.space-y-10>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start:calc(calc(var(--spacing)*10)*var(--tw-space-y-reverse));margin-block-end: calc(calc(var(--spacing)*10)*calc(1 - var(--tw-space-y-reverse)))
    }

    .gap-x-20 {
        column-gap: calc(var(--spacing)*20)
    }

    :where(.space-x-1>:not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start:calc(calc(var(--spacing)*1)*var(--tw-space-x-reverse));margin-inline-end: calc(calc(var(--spacing)*1)*calc(1 - var(--tw-space-x-reverse)))
    }

    :where(.space-x-2>:not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start:calc(calc(var(--spacing)*2)*var(--tw-space-x-reverse));margin-inline-end: calc(calc(var(--spacing)*2)*calc(1 - var(--tw-space-x-reverse)))
    }

    :where(.divide-y>:not(:last-child)) {
        --tw-divide-y-reverse: 0;
        border-bottom-style: var(--tw-border-style);
        border-top-style: var(--tw-border-style);
        border-top-width: calc(1px*var(--tw-divide-y-reverse));
        border-bottom-width: calc(1px*calc(1 - var(--tw-divide-y-reverse)))
    }

    :where(.divide-border>:not(:last-child)) {
        border-color: var(--color-border)
    }

    .truncate {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden
    }

    .overflow-hidden {
        overflow: hidden
    }

    .rounded-2xl {
        border-radius: var(--radius-2xl)
    }

    .rounded-3xl {
        border-radius: var(--radius-3xl)
    }

    .rounded-full {
        border-radius: 3.40282e38px
    }

    .rounded-lg {
        border-radius: var(--radius-lg)
    }

    .rounded-md {
        border-radius: var(--radius-md)
    }

    .rounded-xl {
        border-radius: var(--radius-xl)
    }

    .rounded-xs {
        border-radius: var(--radius-xs)
    }

    .rounded-t-2xl {
        border-top-left-radius: var(--radius-2xl);
        border-top-right-radius: var(--radius-2xl)
    }

    .rounded-t-\[36px\] {
        border-top-left-radius: 36px;
        border-top-right-radius: 36px
    }

    .rounded-tl-sm {
        border-top-left-radius: var(--radius-sm)
    }

    .rounded-b-2xl {
        border-bottom-right-radius: var(--radius-2xl);
        border-bottom-left-radius: var(--radius-2xl)
    }

    .rounded-b-\[36px\] {
        border-bottom-right-radius: 36px;
        border-bottom-left-radius: 36px
    }

    .border {
        border-style: var(--tw-border-style);
        border-width: 1px
    }

    .border-2 {
        border-style: var(--tw-border-style);
        border-width: 2px
    }

    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px
    }

    .border-none {
        --tw-border-style: none;
        border-style: none
    }

    .border-input {
        border-color: var(--color-input)
    }

    .border-muted-foreground {
        border-color: var(--color-muted-foreground)
    }

    .border-primary {
        border-color: var(--color-primary)
    }

    .border-primary\/40 {
        border-color: color-mix(in oklab,var(--color-primary)40%,transparent)
    }

    .border-transparent {
        border-color: #0000
    }

    .bg-background {
        background-color: var(--color-background)
    }

    .bg-background\/70 {
        background-color: color-mix(in oklab,var(--color-background)70%,transparent)
    }

    .bg-border {
        background-color: var(--color-border)
    }

    .bg-card {
        background-color: var(--color-card)
    }

    .bg-current {
        background-color: currentColor
    }

    .bg-destructive {
        background-color: var(--color-destructive)
    }

    .bg-muted {
        background-color: var(--color-muted)
    }

    .bg-muted\/50 {
        background-color: color-mix(in oklab,var(--color-muted)50%,transparent)
    }

    .bg-popover {
        background-color: var(--color-popover)
    }

    .bg-primary {
        background-color: var(--color-primary)
    }

    .bg-secondary {
        background-color: var(--color-secondary)
    }

    .bg-transparent {
        background-color: #0000
    }

    .bg-transparent\! {
        background-color: #0000!important
    }

    .bg-linear-to-b {
        --tw-gradient-position: to bottom in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }

    .bg-linear-to-br {
        --tw-gradient-position: to bottom right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }

    .bg-linear-to-l {
        --tw-gradient-position: to left in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }

    .bg-linear-to-r {
        --tw-gradient-position: to right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }

    .bg-linear-to-t {
        --tw-gradient-position: to top in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }

    .bg-\[repeating-linear-gradient\(90deg\,transparent\,transparent_4px\,currentColor_4px\,currentColor_10px\)\] {
        background-image: repeating-linear-gradient(90deg,#0000,#0000 4px,currentColor 4px 10px)
    }

    .bg-\[repeating-linear-gradient\(180deg\,transparent\,transparent_4px\,currentColor_4px\,currentColor_10px\)\] {
        background-image: repeating-linear-gradient(#0000,#0000 4px,currentColor 4px 10px)
    }

    .from-background {
        --tw-gradient-from: var(--color-background);
        --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-cream {
        --tw-gradient-from: var(--color-cream);
        --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-foreground {
        --tw-gradient-from: var(--color-foreground);
        --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-muted {
        --tw-gradient-from: var(--color-muted);
        --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .from-muted\/80 {
        --tw-gradient-from: color-mix(in oklab,var(--color-muted)80%,transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .via-background {
        --tw-gradient-via: var(--color-background);
        --tw-gradient-via-stops: var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-via)var(--tw-gradient-via-position),var(--tw-gradient-to)var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops)
    }

    .via-muted {
        --tw-gradient-via: var(--color-muted);
        --tw-gradient-via-stops: var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-via)var(--tw-gradient-via-position),var(--tw-gradient-to)var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops)
    }

    .via-transparent {
        --tw-gradient-via: transparent;
        --tw-gradient-via-stops: var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-via)var(--tw-gradient-via-position),var(--tw-gradient-to)var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops)
    }

    .via-20\% {
        --tw-gradient-via-position: 20%
    }

    .to-background\/80 {
        --tw-gradient-to: color-mix(in oklab,var(--color-background)80%,transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .to-cream {
        --tw-gradient-to: var(--color-cream);
        --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .to-foreground\/70 {
        --tw-gradient-to: color-mix(in oklab,var(--color-foreground)70%,transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .to-muted\/80 {
        --tw-gradient-to: color-mix(in oklab,var(--color-muted)80%,transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .to-transparent {
        --tw-gradient-to: transparent;
        --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))
    }

    .bg-clip-text {
        -webkit-background-clip: text;
        background-clip: text
    }

    .stroke-3 {
        stroke-width: 3px
    }

    .object-contain {
        object-fit: contain
    }

    .object-cover {
        object-fit: cover
    }

    .object-left-top {
        object-position: left top
    }

    .object-top {
        object-position: top
    }

    .p-0 {
        padding: calc(var(--spacing)*0)
    }

    .p-2 {
        padding: calc(var(--spacing)*2)
    }

    .p-3 {
        padding: calc(var(--spacing)*3)
    }

    .p-4 {
        padding: calc(var(--spacing)*4)
    }

    .p-6 {
        padding: calc(var(--spacing)*6)
    }

    .px-0 {
        padding-inline:calc(var(--spacing)*0)}

    .px-1\.5 {
        padding-inline: calc(var(--spacing)*1.5)
    }

    .px-2 {
        padding-inline:calc(var(--spacing)*2)}

    .px-3 {
        padding-inline: calc(var(--spacing)*3)
    }

    .px-4 {
        padding-inline:calc(var(--spacing)*4)}

    .px-6 {
        padding-inline: calc(var(--spacing)*6)
    }

    .px-8 {
        padding-inline:calc(var(--spacing)*8)}

    .py-0\.5 {
        padding-block: calc(var(--spacing)*.5)
    }

    .py-1 {
        padding-block:calc(var(--spacing)*1)}

    .py-2 {
        padding-block: calc(var(--spacing)*2)
    }

    .py-3 {
        padding-block:calc(var(--spacing)*3)}

    .py-4 {
        padding-block: calc(var(--spacing)*4)
    }

    .py-5 {
        padding-block:calc(var(--spacing)*5)}

    .py-6 {
        padding-block: calc(var(--spacing)*6)
    }

    .py-12 {
        padding-block:calc(var(--spacing)*12)}

    .py-28 {
        padding-block: calc(var(--spacing)*28)
    }

    .py-32 {
        padding-block:calc(var(--spacing)*32)}

    .ps-4 {
        padding-inline-start: calc(var(--spacing)*4)
    }

    .pe-0\! {
        padding-inline-end: calc(var(--spacing)*0)!important
    }

    .pe-4 {
        padding-inline-end:calc(var(--spacing)*4)}

    .pt-0 {
        padding-top: calc(var(--spacing)*0)
    }

    .pt-2 {
        padding-top: calc(var(--spacing)*2)
    }

    .pt-4 {
        padding-top: calc(var(--spacing)*4)
    }

    .pt-10 {
        padding-top: calc(var(--spacing)*10)
    }

    .pt-28 {
        padding-top: calc(var(--spacing)*28)
    }

    .pb-4 {
        padding-bottom: calc(var(--spacing)*4)
    }

    .pb-28 {
        padding-bottom: calc(var(--spacing)*28)
    }

    .pl-4 {
        padding-left: calc(var(--spacing)*4)
    }

    .text-center {
        text-align: center
    }

    .text-left {
        text-align: left
    }

    .text-start {
        text-align: start
    }

    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading,var(--text-2xl--line-height))
    }

    .text-3xl {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading,var(--text-3xl--line-height))
    }

    .text-4xl {
        font-size: var(--text-4xl);
        line-height: var(--tw-leading,var(--text-4xl--line-height))
    }

    .text-5xl {
        font-size: var(--text-5xl);
        line-height: var(--tw-leading,var(--text-5xl--line-height))
    }

    .text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading,var(--text-base--line-height))
    }

    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading,var(--text-lg--line-height))
    }

    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading,var(--text-sm--line-height))
    }

    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading,var(--text-xl--line-height))
    }

    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading,var(--text-xs--line-height))
    }

    .leading-none {
        --tw-leading: 1;
        line-height: 1
    }

    .leading-none\! {
        --tw-leading: 1!important;
        line-height: 1!important
    }

    .leading-snug {
        --tw-leading: var(--leading-snug);
        line-height: var(--leading-snug)
    }

    .leading-tight {
        --tw-leading: var(--leading-tight);
        line-height: var(--leading-tight)
    }

    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold)
    }

    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium)
    }

    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold)
    }

    .tracking-tight {
        --tw-tracking: var(--tracking-tight);
        letter-spacing: var(--tracking-tight)
    }

    .tracking-wide {
        --tw-tracking: var(--tracking-wide);
        letter-spacing: var(--tracking-wide)
    }

    .text-balance {
        text-wrap: balance
    }

    .whitespace-nowrap {
        white-space: nowrap
    }

    .text-blue-600 {
        color: var(--color-blue-600)
    }

    .text-card-foreground {
        color: var(--color-card-foreground)
    }

    .text-current {
        color: currentColor
    }

    .text-destructive-foreground {
        color: var(--color-destructive-foreground)
    }

    .text-foreground {
        color: var(--color-foreground)
    }

    .text-muted-foreground {
        color: var(--color-muted-foreground)
    }

    .text-popover-foreground {
        color: var(--color-popover-foreground)
    }

    .text-primary {
        color: var(--color-primary)
    }

    .text-primary-foreground {
        color: var(--color-primary-foreground)
    }

    .text-secondary-foreground {
        color: var(--color-secondary-foreground)
    }

    .text-transparent {
        color: #0000
    }

    .text-white {
        color: var(--color-white)
    }

    .no-underline {
        text-decoration-line: none
    }

    .underline {
        text-decoration-line: underline
    }

    .underline-offset-4 {
        text-underline-offset: 4px
    }

    .antialiased {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale
    }

    .opacity-0 {
        opacity: 0
    }

    .opacity-100 {
        opacity: 1
    }

    .shadow-lg {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color,#0000001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }

    .shadow-md {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color,#0000001a),0 2px 4px -2px var(--tw-shadow-color,#0000001a);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }

    .shadow-sm {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color,#0000001a),0 1px 2px -1px var(--tw-shadow-color,#0000001a);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }

    .shadow-xs {
        --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color,#0000000d);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }

    .ring-0 {
        --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(0px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }

    .ring-1 {
        --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }

    .ring-input {
        --tw-ring-color: var(--color-input)
    }

    .outline-hidden {
        --tw-outline-style: none;
        outline-style: none
    }

    @media (forced-colors:active) {
        .outline-hidden {
            outline-offset: 2px;
            outline: 2px solid #0000
        }
    }

    .outline {
        outline-style: var(--tw-outline-style);
        outline-width: 1px
    }

    .outline-4 {
        outline-style: var(--tw-outline-style);
        outline-width: 4px
    }

    .outline-primary {
        outline-color: var(--color-primary)
    }

    .filter {
        filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)
    }

    .backdrop-blur-md {
        --tw-backdrop-blur: blur(var(--blur-md));
        -webkit-backdrop-filter: var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-sepia,);
        backdrop-filter: var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-sepia,)
    }

    .transition {
        transition-property: color,background-color,border-color,outline-color,text-decoration-color,fill,stroke,--tw-gradient-from,--tw-gradient-via,--tw-gradient-to,opacity,box-shadow,transform,translate,scale,rotate,filter,-webkit-backdrop-filter,backdrop-filter;
        transition-timing-function: var(--tw-ease,var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,var(--default-transition-duration))
    }

    .transition-\[color\,box-shadow\] {
        transition-property: color,box-shadow;
        transition-timing-function: var(--tw-ease,var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,var(--default-transition-duration))
    }

    .transition-all {
        transition-property: all;
        transition-timing-function: var(--tw-ease,var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,var(--default-transition-duration))
    }

    .transition-colors {
        transition-property: color,background-color,border-color,outline-color,text-decoration-color,fill,stroke,--tw-gradient-from,--tw-gradient-via,--tw-gradient-to;
        transition-timing-function: var(--tw-ease,var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,var(--default-transition-duration))
    }

    .transition-opacity {
        transition-property: opacity;
        transition-timing-function: var(--tw-ease,var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,var(--default-transition-duration))
    }

    .transition-transform {
        transition-property: transform,translate,scale,rotate;
        transition-timing-function: var(--tw-ease,var(--default-transition-timing-function));
        transition-duration: var(--tw-duration,var(--default-transition-duration))
    }

    .duration-200 {
        --tw-duration: .2s;
        transition-duration: .2s
    }

    .duration-300 {
        --tw-duration: .3s;
        transition-duration: .3s
    }

    .duration-500 {
        --tw-duration: .5s;
        transition-duration: .5s
    }

    .ease-in-out {
        --tw-ease: var(--ease-in-out);
        transition-timing-function: var(--ease-in-out)
    }

    .select-none {
        -webkit-user-select: none;
        user-select: none
    }

    .\[mask-image\: linear-gradient\(90deg\,transparent\,black_25\%\,black_75\%\,transparent\)\] {
        -webkit-mask-image:linear-gradient(90deg,#0000,#000 25% 75%,#0000);
        mask-image: linear-gradient(90deg,#0000,#000 25% 75%,#0000)
    }

    .\[mask-image\: linear-gradient\(180deg\,transparent\,black_25\%\,black_75\%\,transparent\)\] {
        -webkit-mask-image:linear-gradient(#0000,#000 25% 75%,#0000);
        mask-image: linear-gradient(#0000,#000 25% 75%,#0000)
    }

    .ease-in-out {
        animation-timing-function: cubic-bezier(.4,0,.2,1)
    }

    @media (hover: hover) {
        .group-hover\:-translate-x-1:is(:where(.group):hover *) {
            --tw-translate-x:calc(var(--spacing)*-1);
            translate: var(--tw-translate-x)var(--tw-translate-y)
        }

        .group-hover\:translate-x-1:is(:where(.group):hover *) {
            --tw-translate-x: calc(var(--spacing)*1);
            translate: var(--tw-translate-x)var(--tw-translate-y)
        }
    }

    .group-data-\[state\=open\]\: rotate-180:is(:where(.group)[data-state=open] *) {
        rotate:180deg
    }

    .peer-disabled\: cursor-not-allowed:is(:where(.peer):disabled~*) {
        cursor:not-allowed
    }

    .peer-disabled\: opacity-70:is(:where(.peer):disabled~*) {
        opacity:.7
    }

    .file\: border-0::file-selector-button {
        border-style:var(--tw-border-style);
        border-width: 0
    }

    .file\: bg-transparent::file-selector-button {
        background-color:#0000
    }

    .file\: text-sm::file-selector-button {
        font-size:var(--text-sm);
        line-height: var(--tw-leading,var(--text-sm--line-height))
    }

    .file\: font-medium::file-selector-button {
        --tw-font-weight:var(--font-weight-medium);
        font-weight: var(--font-weight-medium)
    }

    .file\: text-foreground::file-selector-button {
        color:var(--color-foreground)
    }

    .placeholder\: text-muted-foreground::placeholder {
        color:var(--color-muted-foreground)
    }

    .first\: pt-0:first-child {
        padding-top:calc(var(--spacing)*0)
    }

    .last\: pb-0:last-child {
        padding-bottom:calc(var(--spacing)*0)
    }

    @media (hover: hover) {
        .hover\:bg-accent:hover {
            background-color:var(--color-accent)
        }

        .hover\:bg-destructive\/90:hover {
            background-color: color-mix(in oklab,var(--color-destructive)90%,transparent)
        }

        .hover\:bg-muted\/80:hover {
            background-color: color-mix(in oklab,var(--color-muted)80%,transparent)
        }

        .hover\:bg-primary\/90:hover {
            background-color: color-mix(in oklab,var(--color-primary)90%,transparent)
        }

        .hover\:bg-secondary\/80:hover {
            background-color: color-mix(in oklab,var(--color-secondary)80%,transparent)
        }

        .hover\:text-accent-foreground:hover {
            color: var(--color-accent-foreground)
        }

        .hover\:text-blue-800:hover {
            color: var(--color-blue-800)
        }

        .hover\:text-foreground:hover {
            color: var(--color-foreground)
        }

        .hover\:text-primary\/80:hover {
            color: color-mix(in oklab,var(--color-primary)80%,transparent)
        }

        .hover\:underline:hover {
            text-decoration-line: underline
        }

        .hover\:opacity-70:hover {
            opacity: .7
        }

        .hover\:opacity-75:hover {
            opacity: .75
        }
    }

    .focus\: bg-accent:focus {
        background-color:var(--color-accent)
    }

    .focus\: text-accent-foreground:focus {
        color:var(--color-accent-foreground)
    }

    .focus\: outline-hidden:focus {
        --tw-outline-style:none;
        outline-style: none
    }

    @media (forced-colors:active) {
        .focus\:outline-hidden:focus {
            outline-offset: 2px;
            outline: 2px solid #0000
        }
    }

    .focus-visible\: border-ring:focus-visible {
        border-color:var(--color-ring)
    }

    .focus-visible\: ring-1:focus-visible {
        --tw-ring-shadow:var(--tw-ring-inset,)0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }

    .focus-visible\: ring-2:focus-visible {
        --tw-ring-shadow:var(--tw-ring-inset,)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }

    .focus-visible\: ring-\[3px\]:focus-visible {
        --tw-ring-shadow:var(--tw-ring-inset,)0 0 0 calc(3px + var(--tw-ring-offset-width))var(--tw-ring-color,currentColor);
        box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)
    }

    .focus-visible\: ring-destructive\/20:focus-visible {
        --tw-ring-color:color-mix(in oklab,var(--color-destructive)20%,transparent)
    }

    .focus-visible\: ring-ring:focus-visible {
        --tw-ring-color:var(--color-ring)
    }

    .focus-visible\: ring-ring\/50:focus-visible {
        --tw-ring-color:color-mix(in oklab,var(--color-ring)50%,transparent)
    }

    .focus-visible\: ring-offset-2:focus-visible {
        --tw-ring-offset-width:2px;
        --tw-ring-offset-shadow: var(--tw-ring-inset,)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color)
    }

    .focus-visible\: ring-offset-background:focus-visible {
        --tw-ring-offset-color:var(--color-background)
    }

    .focus-visible\: outline-hidden:focus-visible {
        --tw-outline-style:none;
        outline-style: none
    }

    @media (forced-colors:active) {
        .focus-visible\:outline-hidden:focus-visible {
            outline-offset: 2px;
            outline: 2px solid #0000
        }
    }

    .disabled\: pointer-events-none:disabled {
        pointer-events:none
    }

    .disabled\: cursor-not-allowed:disabled {
        cursor:not-allowed
    }

    .disabled\: opacity-50:disabled {
        opacity:.5
    }

    .aria-invalid\: border-destructive[aria-invalid=true] {
        border-color:var(--color-destructive)
    }

    .aria-invalid\: ring-destructive\/20[aria-invalid=true] {
        --tw-ring-color:color-mix(in oklab,var(--color-destructive)20%,transparent)
    }

    .data-active\: bg-accent\/50[data-active] {
        background-color:color-mix(in oklab,var(--color-accent)50%,transparent)
    }

    .data-\[motion\=from-end\]\: slide-in-from-right-52[data-motion=from-end] {
        --tw-enter-translate-x:13rem
    }

    .data-\[motion\=from-start\]\: slide-in-from-left-52[data-motion=from-start] {
        --tw-enter-translate-x:-13rem
    }

    .data-\[motion\=to-end\]\: slide-out-to-right-52[data-motion=to-end] {
        --tw-exit-translate-x:13rem
    }

    .data-\[motion\=to-start\]\: slide-out-to-left-52[data-motion=to-start] {
        --tw-exit-translate-x:-13rem
    }

    .data-\[motion\^\=from-\]\: animate-in[data-motion^=from-] {
        --tw-enter-opacity:initial;
        --tw-enter-scale: initial;
        --tw-enter-rotate: initial;
        --tw-enter-translate-x: initial;
        --tw-enter-translate-y: initial;
        animation-name: enter;
        animation-duration: .15s
    }

    .data-\[motion\^\=from-\]\: fade-in[data-motion^=from-] {
        --tw-enter-opacity:0
    }

    .data-\[motion\^\=to-\]\: animate-out[data-motion^=to-] {
        --tw-exit-opacity:initial;
        --tw-exit-scale: initial;
        --tw-exit-rotate: initial;
        --tw-exit-translate-x: initial;
        --tw-exit-translate-y: initial;
        animation-name: exit;
        animation-duration: .15s
    }

    .data-\[motion\^\=to-\]\: fade-out[data-motion^=to-] {
        --tw-exit-opacity:0
    }

    .data-\[orientation\=horizontal\]\: h-px[data-orientation=horizontal] {
        height:1px
    }

    .data-\[orientation\=horizontal\]\: w-full[data-orientation=horizontal] {
        width:100%
    }

    .data-\[orientation\=vertical\]\: h-full[data-orientation=vertical] {
        height:100%
    }

    .data-\[orientation\=vertical\]\: w-px[data-orientation=vertical] {
        width:1px
    }

    .data-\[state\=checked\]\: translate-x-4[data-state=checked] {
        --tw-translate-x:calc(var(--spacing)*4);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .data-\[state\=checked\]\: bg-primary[data-state=checked] {
        background-color:var(--color-primary)
    }

    .data-\[state\=checked\]\: text-primary-foreground[data-state=checked] {
        color:var(--color-primary-foreground)
    }

    .data-\[state\=closed\]\: animate-accordion-up[data-state=closed] {
        animation:.2s ease-out accordion-up
    }

    .data-\[state\=closed\]\: animate-out[data-state=closed] {
        --tw-exit-opacity:initial;
        --tw-exit-scale: initial;
        --tw-exit-rotate: initial;
        --tw-exit-translate-x: initial;
        --tw-exit-translate-y: initial;
        animation-name: exit;
        animation-duration: .15s
    }

    .data-\[state\=closed\]\: zoom-out-95[data-state=closed] {
        --tw-exit-scale:.95
    }

    .data-\[state\=hidden\]\: animate-out[data-state=hidden] {
        --tw-exit-opacity:initial;
        --tw-exit-scale: initial;
        --tw-exit-rotate: initial;
        --tw-exit-translate-x: initial;
        --tw-exit-translate-y: initial;
        animation-name: exit;
        animation-duration: .15s
    }

    .data-\[state\=hidden\]\: fade-out[data-state=hidden] {
        --tw-exit-opacity:0
    }

    .data-\[state\=open\]\: animate-accordion-down[data-state=open] {
        animation:.2s ease-out accordion-down
    }

    .data-\[state\=open\]\: bg-accent\/50[data-state=open] {
        background-color:color-mix(in oklab,var(--color-accent)50%,transparent)
    }

    .data-\[state\=open\]\: animate-in[data-state=open] {
        --tw-enter-opacity:initial;
        --tw-enter-scale: initial;
        --tw-enter-rotate: initial;
        --tw-enter-translate-x: initial;
        --tw-enter-translate-y: initial;
        animation-name: enter;
        animation-duration: .15s
    }

    .data-\[state\=open\]\: zoom-in-90[data-state=open] {
        --tw-enter-scale:.9
    }

    .data-\[state\=unchecked\]\: translate-x-0[data-state=unchecked] {
        --tw-translate-x:calc(var(--spacing)*0);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    .data-\[state\=unchecked\]\: bg-input[data-state=unchecked] {
        background-color:var(--color-input)
    }

    .data-\[state\=visible\]\: animate-in[data-state=visible] {
        --tw-enter-opacity:initial;
        --tw-enter-scale: initial;
        --tw-enter-rotate: initial;
        --tw-enter-translate-x: initial;
        --tw-enter-translate-y: initial;
        animation-name: enter;
        animation-duration: .15s
    }

    .data-\[state\=visible\]\: fade-in[data-state=visible] {
        --tw-enter-opacity:0
    }

    @media (width<64rem) {
        .max-lg\: ml-6 {
            margin-left:calc(var(--spacing)*6)
        }

        .max-lg\:hidden {
            display: none
        }

        .max-lg\:h-\[550px\] {
            height: 550px
        }

        .max-lg\:overflow-hidden {
            overflow: hidden
        }

        .max-lg\:rounded-tr-none {
            border-top-right-radius: 0
        }

        .max-lg\:pt-10 {
            padding-top: calc(var(--spacing)*10)
        }
    }

    @media (width<48rem) {
        .max-md\: hidden {
            display:none
        }

        .max-md\:flex-col {
            flex-direction: column
        }

        .max-md\:border-b {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 1px
        }
    }

    @media (width<40rem) {
        .max-sm\: flex-col {
            flex-direction:column
        }
    }

    @media (width>=40rem) {
        .sm\: grid-cols-3 {
            grid-template-columns:repeat(3,minmax(0,1fr))
        }

        .sm\:flex-row {
            flex-direction: row
        }

        .sm\:justify-center {
            justify-content: center
        }

        .sm\:text-4xl {
            font-size: var(--text-4xl);
            line-height: var(--tw-leading,var(--text-4xl--line-height))
        }

        .sm\:text-6xl {
            font-size: var(--text-6xl);
            line-height: var(--tw-leading,var(--text-6xl--line-height))
        }
    }

    @media (width>=48rem) {
        .md\: absolute {
            position:absolute
        }

        .md\:col-span-3 {
            grid-column: span 3/span 3
        }

        .md\:mt-12 {
            margin-top: calc(var(--spacing)*12)
        }

        .md\:mt-14 {
            margin-top: calc(var(--spacing)*14)
        }

        .md\:mt-20 {
            margin-top: calc(var(--spacing)*20)
        }

        .md\:block {
            display: block
        }

        .md\:grid {
            display: grid
        }

        .md\:hidden {
            display: none
        }

        .md\:w-\[var\(--radix-navigation-menu-viewport-width\)\] {
            width: var(--radix-navigation-menu-viewport-width)
        }

        .md\:w-auto {
            width: auto
        }

        .md\:max-w-none {
            max-width: none
        }

        .md\:basis-3\/5 {
            flex-basis: 60%
        }

        .md\:grid-cols-2 {
            grid-template-columns: repeat(2,minmax(0,1fr))
        }

        .md\:grid-cols-3 {
            grid-template-columns: repeat(3,minmax(0,1fr))
        }

        .md\:grid-cols-4 {
            grid-template-columns: repeat(4,minmax(0,1fr))
        }

        .md\:gap-0 {
            gap: calc(var(--spacing)*0)
        }

        .md\:gap-4 {
            gap: calc(var(--spacing)*4)
        }

        .md\:gap-14 {
            gap: calc(var(--spacing)*14)
        }

        .md\:gap-20 {
            gap: calc(var(--spacing)*20)
        }

        :where(.md\:space-y-6>:not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start:calc(calc(var(--spacing)*6)*var(--tw-space-y-reverse));margin-block-end: calc(calc(var(--spacing)*6)*calc(1 - var(--tw-space-y-reverse)))
        }

        .md\:border-b {
            border-bottom-style: var(--tw-border-style);
            border-bottom-width: 1px
        }

        .md\:p-6 {
            padding: calc(var(--spacing)*6)
        }

        .md\:px-6 {
            padding-inline:calc(var(--spacing)*6)}

        .md\: py-8 {
            padding-block:calc(var(--spacing)*8)
        }

        .md\:pe-6 {
            padding-inline-end:calc(var(--spacing)*6)}

        .md\: pt-6 {
            padding-top:calc(var(--spacing)*6)
        }

        .md\:pb-0 {
            padding-bottom: calc(var(--spacing)*0)
        }

        .md\:text-2xl {
            font-size: var(--text-2xl);
            line-height: var(--tw-leading,var(--text-2xl--line-height))
        }

        .md\:text-3xl {
            font-size: var(--text-3xl);
            line-height: var(--tw-leading,var(--text-3xl--line-height))
        }

        .md\:text-4xl {
            font-size: var(--text-4xl);
            line-height: var(--tw-leading,var(--text-4xl--line-height))
        }

        .md\:text-5xl {
            font-size: var(--text-5xl);
            line-height: var(--tw-leading,var(--text-5xl--line-height))
        }

        .md\:text-base {
            font-size: var(--text-base);
            line-height: var(--tw-leading,var(--text-base--line-height))
        }

        .md\:text-sm {
            font-size: var(--text-sm);
            line-height: var(--tw-leading,var(--text-sm--line-height))
        }

        .md\:text-xl {
            font-size: var(--text-xl);
            line-height: var(--tw-leading,var(--text-xl--line-height))
        }

        .md\:whitespace-nowrap {
            white-space: nowrap
        }
    }

    @media (width>=64rem) {
        .lg\: top-12 {
            top:calc(var(--spacing)*12)
        }

        .lg\:container {
            width: 100%
        }

        @media (width>=40rem) {
            .lg\: container {
                max-width:40rem
            }
        }

        @media (width>=48rem) {
            .lg\: container {
                max-width:48rem
            }
        }

        .lg\:container {
            max-width: 64rem
        }

        @media (width>=80rem) {
            .lg\: container {
                max-width:80rem
            }
        }

        @media (width>=96rem) {
            .lg\: container {
                max-width:96rem
            }
        }

        .lg\:container {
            margin-inline:auto;padding-inline:1.5rem}

        @media (width>=40rem) {
            .lg\: container {
                max-width:none
            }
        }

        @media (width>=1400px) {
            .lg\: container {
                max-width:1220px
            }
        }

        .lg\:mx-4 {
            margin-inline:calc(var(--spacing)*4)}

        .lg\: mx-auto {
            margin-inline:auto
        }

        .lg\:mt-12 {
            margin-top: calc(var(--spacing)*12)
        }

        .lg\:mt-20 {
            margin-top: calc(var(--spacing)*20)
        }

        .lg\:mt-24 {
            margin-top: calc(var(--spacing)*24)
        }

        .lg\:flex {
            display: flex
        }

        .lg\:hidden {
            display: none
        }

        .lg\:size-5 {
            width: calc(var(--spacing)*5);
            height: calc(var(--spacing)*5)
        }

        .lg\:size-9 {
            width: calc(var(--spacing)*9);
            height: calc(var(--spacing)*9)
        }

        .lg\:size-20 {
            width: calc(var(--spacing)*20);
            height: calc(var(--spacing)*20)
        }

        .lg\:h-\[328px\] {
            height: 328px
        }

        .lg\:min-h-\[80vh\] {
            min-height: 80vh
        }

        .lg\:basis-\[28\%\] {
            flex-basis: 28%
        }

        .lg\:grid-cols-1 {
            grid-template-columns: repeat(1,minmax(0,1fr))
        }

        .lg\:grid-cols-2 {
            grid-template-columns: repeat(2,minmax(0,1fr))
        }

        .lg\:grid-cols-3 {
            grid-template-columns: repeat(3,minmax(0,1fr))
        }

        .lg\:grid-cols-5 {
            grid-template-columns: repeat(5,minmax(0,1fr))
        }

        .lg\:flex-row {
            flex-direction: row
        }

        .lg\:items-center {
            align-items: center
        }

        .lg\:items-end {
            align-items: flex-end
        }

        .lg\:gap-5 {
            gap: calc(var(--spacing)*5)
        }

        .lg\:gap-10 {
            gap: calc(var(--spacing)*10)
        }

        .lg\:gap-12 {
            gap: calc(var(--spacing)*12)
        }

        .lg\:gap-16 {
            gap: calc(var(--spacing)*16)
        }

        .lg\:gap-20 {
            gap: calc(var(--spacing)*20)
        }

        .lg\:gap-24 {
            gap: calc(var(--spacing)*24)
        }

        :where(.lg\:space-y-16>:not(:last-child)) {
            --tw-space-y-reverse: 0;
            margin-block-start:calc(calc(var(--spacing)*16)*var(--tw-space-y-reverse));margin-block-end: calc(calc(var(--spacing)*16)*calc(1 - var(--tw-space-y-reverse)))
        }

        .lg\:gap-x-28 {
            column-gap: calc(var(--spacing)*28)
        }

        .lg\:py-32 {
            padding-block:calc(var(--spacing)*32)}

        .lg\: ps-10 {
            padding-inline-start:calc(var(--spacing)*10)
        }

        .lg\:pt-0 {
            padding-top: calc(var(--spacing)*0)
        }

        .lg\:pt-32 {
            padding-top: calc(var(--spacing)*32)
        }

        .lg\:pt-44 {
            padding-top: calc(var(--spacing)*44)
        }

        .lg\:pb-32 {
            padding-bottom: calc(var(--spacing)*32)
        }

        .lg\:text-3xl {
            font-size: var(--text-3xl);
            line-height: var(--tw-leading,var(--text-3xl--line-height))
        }

        .lg\:text-4xl {
            font-size: var(--text-4xl);
            line-height: var(--tw-leading,var(--text-4xl--line-height))
        }

        .lg\:text-5xl {
            font-size: var(--text-5xl);
            line-height: var(--tw-leading,var(--text-5xl--line-height))
        }

        .lg\:text-6xl {
            font-size: var(--text-6xl);
            line-height: var(--tw-leading,var(--text-6xl--line-height))
        }

        .lg\:text-7xl {
            font-size: var(--text-7xl);
            line-height: var(--tw-leading,var(--text-7xl--line-height))
        }
    }

    @media (width>=80rem) {
        .xl\: basis-1\/4 {
            flex-basis:25%
        }

        .xl\:-translate-x-10 {
            --tw-translate-x: calc(var(--spacing)*-10);
            translate: var(--tw-translate-x)var(--tw-translate-y)
        }

        .xl\:translate-x-10 {
            --tw-translate-x: calc(var(--spacing)*10);
            translate: var(--tw-translate-x)var(--tw-translate-y)
        }

        .xl\:gap-20 {
            gap: calc(var(--spacing)*20)
        }

        .xl\:gap-24 {
            gap: calc(var(--spacing)*24)
        }
    }

    .dark\: scale-0:is(.dark *) {
        --tw-scale-x:0%;
        --tw-scale-y: 0%;
        --tw-scale-z: 0%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }

    .dark\: scale-100:is(.dark *) {
        --tw-scale-x:100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }

    .dark\: -rotate-90:is(.dark *) {
        rotate:-90deg
    }

    .dark\: rotate-0:is(.dark *) {
        rotate:none
    }

    .dark\: text-blue-400:is(.dark *) {
        color:var(--color-blue-400)
    }

    .dark\: invert:is(.dark *) {
        --tw-invert:invert(100%);
        filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)
    }

    .dark\: prose-invert:is(.dark *) {
        --tw-prose-body:var(--tw-prose-invert-body);
        --tw-prose-headings: var(--tw-prose-invert-headings);
        --tw-prose-lead: var(--tw-prose-invert-lead);
        --tw-prose-links: var(--tw-prose-invert-links);
        --tw-prose-bold: var(--tw-prose-invert-bold);
        --tw-prose-counters: var(--tw-prose-invert-counters);
        --tw-prose-bullets: var(--tw-prose-invert-bullets);
        --tw-prose-hr: var(--tw-prose-invert-hr);
        --tw-prose-quotes: var(--tw-prose-invert-quotes);
        --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
        --tw-prose-captions: var(--tw-prose-invert-captions);
        --tw-prose-kbd: var(--tw-prose-invert-kbd);
        --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
        --tw-prose-code: var(--tw-prose-invert-code);
        --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
        --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
        --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
        --tw-prose-td-borders: var(--tw-prose-invert-td-borders)
    }

    @media (hover: hover) {
        .dark\:hover\:text-blue-200:is(.dark *):hover {
            color:var(--color-blue-200)
        }
    }

    .dark\: focus-visible\:ring-destructive\/40:is(.dark *):focus-visible,.dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid=true] {
        --tw-ring-color:color-mix(in oklab,var(--color-destructive)40%,transparent)
    }

    .\[\&_svg\]\: pointer-events-none svg {
        pointer-events:none
    }

    .\[\&_svg\]\: size-4 svg {
        width:calc(var(--spacing)*4);
        height: calc(var(--spacing)*4)
    }

    .\[\&_svg\]\: shrink-0 svg {
        flex-shrink:0
    }

    .\[\&\>\.image-container\]\: flex-1>.image-container {
        flex:1
    }

    .\[\&\>\.image-container\]\: translate-x-2>.image-container {
        --tw-translate-x:calc(var(--spacing)*2);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    @media (width>=48rem) {
        .md\: \[\&\>\.image-container\]\:-translate-y-3>.image-container {
            --tw-translate-y:calc(var(--spacing)*-3);
            translate: var(--tw-translate-x)var(--tw-translate-y)
        }

        .md\:\[\&\>\.image-container\]\:place-items-center>.image-container {
            place-items: center
        }
    }

    @media (width>=80rem) {
        .xl\: \[\&\>\.image-container\]\:translate-x-6>.image-container {
            --tw-translate-x:calc(var(--spacing)*6);
            translate: var(--tw-translate-x)var(--tw-translate-y)
        }
    }

    .\[\&\>\.title-container\]\: mb-5>.title-container {
        margin-bottom:calc(var(--spacing)*5)
    }

    .\[\&\>\.title-container\]\: translate-x-0>.title-container {
        --tw-translate-x:calc(var(--spacing)*0);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }

    @media (width>=48rem) {
        .md\: \[\&\>\.title-container\]\:mb-0>.title-container {
            margin-bottom:calc(var(--spacing)*0)
        }

        .md\:\[\&\>\.title-container\]\:mb-8>.title-container {
            margin-bottom: calc(var(--spacing)*8)
        }

        .md\:\[\&\>\.title-container\]\:translate-x-2>.title-container {
            --tw-translate-x: calc(var(--spacing)*2);
            translate: var(--tw-translate-x)var(--tw-translate-y)
        }
    }

    @media (width>=80rem) {
        .xl\: \[\&\>\.title-container\]\:translate-x-4>.title-container {
            --tw-translate-x:calc(var(--spacing)*4);
            translate: var(--tw-translate-x)var(--tw-translate-y)
        }
    }

    .\[\&\>svg\]\: pointer-events-none>svg {
        pointer-events:none
    }

    .\[\&\>svg\]\: size-3>svg {
        width:calc(var(--spacing)*3);
        height: calc(var(--spacing)*3)
    }

    .\[\&\>svg\]\: size-6>svg {
        width:calc(var(--spacing)*6);
        height: calc(var(--spacing)*6)
    }

    @media (width>=64rem) {
        .lg\: \[\&\>svg\]\:size-8>svg {
            width:calc(var(--spacing)*8);
            height: calc(var(--spacing)*8)
        }
    }

    .\[\&\[data-state\=open\]\>svg\]\: rotate-180[data-state=open]>svg {
        rotate:180deg
    }

    @media (hover: hover) {
        a.\[a\&\]\:hover\:bg-accent:hover {
            background-color:var(--color-accent)
        }

        a.\[a\&\]\:hover\:bg-destructive\/90:hover {
            background-color: color-mix(in oklab,var(--color-destructive)90%,transparent)
        }

        a.\[a\&\]\:hover\:bg-primary\/90:hover {
            background-color: color-mix(in oklab,var(--color-primary)90%,transparent)
        }

        a.\[a\&\]\:hover\:bg-secondary\/90:hover {
            background-color: color-mix(in oklab,var(--color-secondary)90%,transparent)
        }

        a.\[a\&\]\:hover\:text-accent-foreground:hover {
            color: var(--color-accent-foreground)
        }
    }

    body {
        font-family: var(--font-inter),sans-serif
    }

    .font-sans {
        font-family: var(--font-dm-sans),sans-serif
    }

    .font-mono {
        font-family: var(--font-dm-mono),monospace
    }

    .font-inter {
        font-family: var(--font-inter),sans-serif
    }
}

@font-face {
    font-family: DM Sans;
    src: url(/fonts/dm-sans/DMSans-Regular.ttf)format("truetype");
    font-weight: 400;
    font-style: normal;
    font-display: swap
}

@font-face {
    font-family: DM Sans;
    src: url(/fonts/dm-sans/DMSans-Medium.ttf)format("truetype");
    font-weight: 500;
    font-style: normal;
    font-display: swap
}

@font-face {
    font-family: DM Sans;
    src: url(/fonts/dm-sans/DMSans-SemiBold.ttf)format("truetype");
    font-weight: 600;
    font-style: normal;
    font-display: swap
}

@font-face {
    font-family: DM Sans;
    src: url(/fonts/dm-sans/DMSans-Bold.ttf)format("truetype");
    font-weight: 700;
    font-style: normal;
    font-display: swap
}

html,body {
    scroll-behavior: smooth;
    overflow-x: hidden
}

body {
    position: relative
}

:root {
    --sidebar: #fafafa;
    --sidebar-foreground: #3f3f46;
    --sidebar-primary: #18181b;
    --sidebar-primary-foreground: #fafafa;
    --sidebar-accent: #f4f4f5;
    --sidebar-accent-foreground: #18181b;
    --sidebar-border: #e5e7eb;
    --sidebar-ring: #3b82f6
}

.dark {
    --sidebar: #18181b;
    --sidebar-foreground: #f4f4f5;
    --sidebar-primary: #1d4ed8;
    --sidebar-primary-foreground: #fff;
    --sidebar-accent: #27272a;
    --sidebar-accent-foreground: #f4f4f5;
    --sidebar-border: #27272a;
    --sidebar-ring: #3b82f6
}

@keyframes enter {
    0% {
        opacity: var(--tw-enter-opacity,1);
        transform: translate3d(var(--tw-enter-translate-x,0),var(--tw-enter-translate-y,0),0)scale3d(var(--tw-enter-scale,1),var(--tw-enter-scale,1),var(--tw-enter-scale,1))rotate(var(--tw-enter-rotate,0))
    }
}

@keyframes exit {
    to {
        opacity: var(--tw-exit-opacity,1);
        transform: translate3d(var(--tw-exit-translate-x,0),var(--tw-exit-translate-y,0),0)scale3d(var(--tw-exit-scale,1),var(--tw-exit-scale,1),var(--tw-exit-scale,1))rotate(var(--tw-exit-rotate,0))
    }
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false;
    initial-value: rotateX(0)
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false;
    initial-value: rotateY(0)
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false;
    initial-value: rotateZ(0)
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false;
    initial-value: skewX(0)
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false;
    initial-value: skewY(0)
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-space-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-divide-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-leading {
    syntax: "*";
    inherits: false
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false
}

@property --tw-tracking {
    syntax: "*";
    inherits: false
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid
}

@property --tw-blur {
    syntax: "*";
    inherits: false
}

@property --tw-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-invert {
    syntax: "*";
    inherits: false
}

@property --tw-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-duration {
    syntax: "*";
    inherits: false
}

@property --tw-ease {
    syntax: "*";
    inherits: false
}

@keyframes accordion-down {
    0% {
        height: 0
    }

    to {
        height: var(--radix-accordion-content-height)
    }
}

@keyframes accordion-up {
    0% {
        height: var(--radix-accordion-content-height)
    }

    to {
        height: 0
    }
}
